version: '3.8'

services:
  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile.dev
    volumes:
      - ./bff:/src
    ports:
      - ${EXTERNAL_PORT}:${BFF_PORT}
    env_file:
      - .env
    environment:
      - PORT=${BFF_PORT}
      - ITEM_SERVICE_ADDR=${ITEM_HOSTNAME}:${ITEM_PORT}
      - MISSION_SERVICE_ADDR=${MISSION_HOSTNAME}:${MISSION_PORT}
      - TREE_SERVICE_ADDR=${TREE_HOSTNAME}:${TREE_PORT}
      - USER_SERVICE_ADDR=${USER_HOSTNAME}:${USER_PORT}
    depends_on:
      - item
      - mission
      - tree
      - user

  # ======================== #
  # ===== Item Service ===== #
  # ======================== #
  item:
    hostname: ${ITEM_HOSTNAME}
    build:
      context: ./item
      dockerfile: Dockerfile.dev
    volumes:
      - ./item:/src
      - ./service-account.json:/src/service-account.json
    expose:
      - ${ITEM_PORT}
    env_file:
      - .env
      - ./item/.env
    environment:
      - PORT=${ITEM_PORT}
    depends_on:
      db:
        condition: service_healthy

  # =========================== #
  # ===== Mission Service ===== #
  # =========================== #
  mission:
    hostname: ${MISSION_HOSTNAME}
    build:
      context: ./mission
      dockerfile: Dockerfile.dev
    volumes:
      - ./mission:/src
      - ./service-account.json:/src/service-account.json
    expose:
      - ${MISSION_PORT}
    env_file:
      - .env
    environment:
      - PORT=${MISSION_PORT}

  # ======================== #
  # ===== Tree Service ===== #
  # ======================== #
  tree:
    hostname: ${TREE_HOSTNAME}
    build:
      context: ./tree
      dockerfile: Dockerfile.dev
    volumes:
      - ./tree:/src
      - ./service-account.json:/src/service-account.json
    expose:
      - ${TREE_PORT}
    env_file:
      - .env
    environment:
      - PORT=${TREE_PORT}
      - GOOGLE_APPLICATION_CREDENTIALS=/src/service-account.json

  # ======================== #
  # ===== User Service ===== #
  # ======================== #
  user:
    hostname: ${USER_HOSTNAME}
    build:
      context: ./user
      dockerfile: Dockerfile.dev
    volumes:
      - ./user:/src
      - ./service-account.json:/src/service-account.json
    expose:
      - ${USER_PORT}
    env_file:
      - .env
    environment:
      - PORT=${USER_PORT}

  # ======================== #
  # ====== PostgreSQL ====== #
  # ======================== #
  db:
    image: postgres:15.4-alpine
    hostname: db
    expose:
      - 5432
    env_file:
      - postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres: null
